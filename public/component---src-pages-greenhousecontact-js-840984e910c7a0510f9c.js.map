{"version":3,"file":"component---src-pages-greenhousecontact-js-840984e910c7a0510f9c.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/greenhousecontact.js"],"sourcesContent":["// src/pages/greenhousecontact.js\nimport React, { useState } from \"react\";\nimport \"aos/dist/aos.css\";\n\nconst InfoTooltip = ({ text }) => (\n  <span className=\"relative group inline-flex items-center align-middle ml-1\" aria-label={text}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" className=\"w-4 h-4 text-gray-400 group-hover:text-gray-700\">\n      <path d=\"M12 2a10 10 0 100 20 10 10 0 000-20zm.75 15.5h-1.5v-6h1.5v6zm0-8h-1.5v-1.5h1.5V9.5z\" />\n    </svg>\n    <span className=\"pointer-events-none absolute left-1/2 -translate-x-1/2 top-full mt-2 z-10 rounded bg-gray-900 text-white text-xs px-3 py-2 opacity-0 group-hover:opacity-100 group-focus:opacity-100 transition shadow-lg whitespace-normal break-words leading-snug min-w-[16rem] w-[28rem] sm:w-[30rem] max-w-[90vw]\">\n      {text}\n    </span>\n  </span>\n);\n\n\nconst GreenHouseContactPage = () => {\n  const [showToast, setShowToast] = useState(false);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [boardToken, setBoardToken] = useState(\"https://boards.greenhouse.io/\");\n  const [boardSlug, setBoardSlug] = useState(\"\");\n  const [harvestApiKey, setHarvestApiKey] = useState(\"\");\n  const [onBehalfOf, setOnBehalfOf] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const handleContactSubmit = async (e) => {\n    e.preventDefault();\n\n    const fullName = `${firstName} ${lastName}`.trim();\n\n    const composedMessage = [\n      company && `Company: ${company}`,\n      boardToken && `Job Board Link: ${boardToken}`,\n      harvestApiKey && `Harvest API Key: ${harvestApiKey}`,\n      onBehalfOf && `On-Behalf-Of User ID: ${onBehalfOf}`,\n      message && `Message: ${message}`,\n    ]\n      .filter(Boolean)\n      .join(\"\\n\");\n\n    const data = {\n      name: fullName,\n      email,\n      message: composedMessage,\n    };\n\n    try {\n      // Call the API using fetch\n      const response = await fetch(\"https://it96ohh4nc.execute-api.us-east-1.amazonaws.com/send-email\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (response.ok) {\n        setShowToast(true);\n        setTimeout(() => setShowToast(false), 5000); // Hide toast after 5 seconds\n        setFirstName(\"\");\n        setLastName(\"\");\n        setEmail(\"\");\n        setCompany(\"\");\n        setBoardToken(\"https://boards.greenhouse.io/\");\n        setBoardSlug(\"\");\n        setHarvestApiKey(\"\");\n        setOnBehalfOf(\"\");\n        setMessage(\"\");\n      } else {\n        console.error(\"Failed to send message\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n    }\n  };\n\n  return (\n\n    <section >\n      <p className=\"text-gray-600 max-w-2xl mb-10\">\n        Once you have set up your JobMinglr integration within Greenhouse, fill out the form below to finish your integration setup.      </p>\n      <p className=\"text-gray-600 max-w-2xl mb-10\">\n        Jobs typically sync within 24 hours once setup is complete.\n      </p>\n\n      {showToast && (\n        <div className=\"mb-6 rounded-md bg-brandGreen border border-brandGreen px-6 py-4 text-sm text-white shadow-md flex items-start justify-between animate-fade-in-out transition-all duration-300 max-w-xl mx-auto\">\n          <div className=\"flex items-start gap-2\">\n            <svg className=\"w-5 h-5 mt-0.5 text-white\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M5 13l4 4L19 7\" />\n            </svg>\n            <span>Thank you! Weâ€™ll get back to you within 48 hours.</span>\n          </div>\n          <button onClick={() => setShowToast(false)} className=\"ml-4 text-white hover:text-gray-200\">&times;</button>\n        </div>\n      )}\n\n      {!showToast && (\n        <form onSubmit={handleContactSubmit} className=\"space-y-5 max-w-xl mx-auto\" >\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 items-center\">\n              <label htmlFor=\"firstName\" className=\"text-sm font-medium text-gray-700\">First Name</label>\n              <div className=\"sm:col-span-2\">\n                <input\n                  id=\"firstName\"\n                  type=\"text\"\n                  value={firstName}\n                  onChange={(e) => setFirstName(e.target.value)}\n                  required\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded shadow-sm\"\n                />\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 items-center\">\n              <label htmlFor=\"lastName\" className=\"text-sm font-medium text-gray-700\">Last Name</label>\n              <div className=\"sm:col-span-2\">\n                <input\n                  id=\"lastName\"\n                  type=\"text\"\n                  value={lastName}\n                  onChange={(e) => setLastName(e.target.value)}\n                  required\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded shadow-sm\"\n                />\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 items-center\">\n              <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">Email</label>\n              <div className=\"sm:col-span-2\">\n                <input\n                  id=\"email\"\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded shadow-sm\"\n                />\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 items-center\">\n              <label htmlFor=\"company\" className=\"text-sm font-medium text-gray-700\">Company</label>\n              <div className=\"sm:col-span-2\">\n                <input\n                  id=\"company\"\n                  type=\"text\"\n                  value={company}\n                  onChange={(e) => setCompany(e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded shadow-sm\"\n                />\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 items-center\">\n              <label htmlFor=\"jobBoardLink\" className=\"text-sm font-medium text-gray-700 flex items-center\">\n                Job Board Link <InfoTooltip text={\"Paste the full Greenhouse job board URL (e.g. https://boards.greenhouse.io/examplecompany).\"} />\n              </label>\n              <div className=\"sm:col-span-2\">\n                <div className=\"flex rounded shadow-sm\">\n                  <span className=\"inline-flex items-center px-2 rounded-l border border-r-0 border-gray-300 bg-gray-50 text-gray-600 text-xs\">\n                    https://boards.greenhouse.io/\n                  </span>\n                  <input\n                    id=\"jobBoardLink\"\n                    type=\"text\"\n                    value={boardSlug}\n                    onChange={(e) => {\n                      const raw = e.target.value.trim();\n                      const cleaned = raw\n                        .replace(/^https?:\\/\\/boards\\.greenhouse\\.io\\/?/i, \"\")\n                        .replace(/\\s+/g, \"-\")\n                        .replace(/[^a-zA-Z0-9-]/g, \"\");\n                      setBoardSlug(cleaned);\n                      setBoardToken(`https://boards.greenhouse.io/${cleaned}`);\n                    }}\n                    placeholder=\"company-name\"\n                    className=\"flex-1 min-w-0 w-full px-3 py-2 text-sm border border-gray-300 rounded-r shadow-sm\"\n                  />\n                </div>\n                <p className=\"text-xs text-gray-500 mt-1\">Weâ€™ll build the full URL for you.</p>\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 items-center\">\n              <label htmlFor=\"harvestApiKey\" className=\"text-sm font-medium text-gray-700 flex items-center\">\n                Harvest API Key <InfoTooltip text={\"Generate this in Greenhouse: Configure â†’ Dev Center â†’ API Credential Management â†’ Create New API Key.\"} />\n              </label>\n              <div className=\"sm:col-span-2\">\n                <input\n                  id=\"harvestApiKey\"\n                  type=\"text\"\n                  value={harvestApiKey}\n                  onChange={(e) => setHarvestApiKey(e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded shadow-sm\"\n                />\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 items-center\">\n              <label htmlFor=\"onBehalfOf\" className=\"text-sm font-medium text-gray-700 flex items-center\">\n                On-Behalf-Of User ID <InfoTooltip text={\"In Greenhouse: Configure â†’ Users â†’ click the API key owner â†’ copy the number from the URL.\"} />\n              </label>\n              <div className=\"sm:col-span-2\">\n                <input\n                  id=\"onBehalfOf\"\n                  placeholder=\"On-Behalf-Of User ID\"\n                  type=\"text\"\n                  value={onBehalfOf}\n                  onChange={(e) => setOnBehalfOf(e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded shadow-sm\"\n                />\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2\">\n              <div className=\"sm:col-start-2 sm:col-span-2 flex justify-end\">\n                <button\n                  type=\"submit\"\n                  className=\"bg-brandGreen text-white px-6 py-3 rounded-full hover:bg-brandGreen-dark transition\"\n                >\n                  Send Message\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      )}\n\n    </section>\n\n  );\n};\n\nexport default GreenHouseContactPage;\n"],"names":["InfoTooltip","text","className","xmlns","viewBox","fill","d","showToast","setShowToast","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","company","setCompany","boardToken","setBoardToken","boardSlug","setBoardSlug","harvestApiKey","setHarvestApiKey","onBehalfOf","setOnBehalfOf","message","setMessage","stroke","strokeWidth","strokeLinecap","strokeLinejoin","onClick","onSubmit","async","e","preventDefault","fullName","trim","composedMessage","filter","Boolean","join","data","name","fetch","method","headers","body","JSON","stringify","ok","setTimeout","console","error","htmlFor","id","type","value","onChange","target","required","cleaned","replace","placeholder"],"sourceRoot":""}