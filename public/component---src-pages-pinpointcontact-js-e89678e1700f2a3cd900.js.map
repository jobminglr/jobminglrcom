{"version":3,"file":"component---src-pages-pinpointcontact-js-e89678e1700f2a3cd900.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/pinpointcontact.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Layout1 from \"../components/Layout1\";\nimport SEO1 from \"../components/SEO1\";\nimport \"aos/dist/aos.css\";\n\nconst InfoTooltip = ({ text }) => (\n  <span className=\"relative group inline-flex items-center align-middle ml-1\" tabIndex={0} aria-label={text}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" className=\"w-4 h-4 text-gray-400 group-hover:text-gray-700\">\n      <path d=\"M12 2a10 10 0 100 20 10 10 0 000-20zm.75 15.5h-1.5v-6h1.5v6zm0-8h-1.5v-1.5h1.5V9.5z\" />\n    </svg>\n    <span className=\"pointer-events-none absolute left-1/2 -translate-x-1/2 top-full mt-2 z-10 rounded bg-gray-900 text-white text-xs px-3 py-2 opacity-0 group-hover:opacity-100 group-focus:opacity-100 transition shadow-lg whitespace-normal break-words leading-snug min-w-[16rem] w-[28rem] sm:w-[30rem] max-w-[90vw]\">      {text}\n    </span>\n  </span>\n);\n\nconst PinpointContactPage = () => {\n  const [showToast, setShowToast] = useState(false);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [apiKey, setApiKey] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const handleContactSubmit = async (e) => {\n    e.preventDefault();\n\n    const fullName = `${firstName} ${lastName}`.trim();\n\n    const composedMessage = [\n      company && `Company: ${company}`,\n      apiKey && `API Key: ${apiKey}`,\n      message && `Message: ${message}`,\n    ]\n      .filter(Boolean)\n      .join(\"\\n\");\n\n    const data = {\n      name: fullName,\n      email,\n      message: composedMessage,\n    };\n\n    try {\n      const response = await fetch(\"https://it96ohh4nc.execute-api.us-east-1.amazonaws.com/send-email\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (response.ok) {\n        setShowToast(true);\n        setTimeout(() => setShowToast(false), 5000);\n        setFirstName(\"\");\n        setLastName(\"\");\n        setEmail(\"\");\n        setCompany(\"\");\n        setApiKey(\"\");\n        setMessage(\"\");\n      } else {\n        console.error(\"Failed to send message\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n    }\n  };\n\n  return (\n\n    <section >\n      <p className=\"text-gray-600 max-w-2xl mb-10\">\n        Once you have set up your JobMinglr integration within Pinpoint, fill out the form below to finish your integration setup.      </p>\n\n      {showToast && (\n        <div className=\"mb-6 rounded-md bg-brandGreen border border-brandGreen px-6 py-4 text-sm text-white shadow-md flex items-start justify-between animate-fade-in-out transition-all duration-300 max-w-xl mx-auto\">\n          <div className=\"flex items-start gap-2\">\n            <svg className=\"w-5 h-5 mt-0.5 text-white\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M5 13l4 4L19 7\" />\n            </svg>\n            <span>Thank you! Weâ€™ll get back to you within 48 hours.</span>\n          </div>\n          <button onClick={() => setShowToast(false)} className=\"ml-4 text-white hover:text-gray-200\">&times;</button>\n        </div>\n      )}\n\n      {!showToast && (\n        <form onSubmit={handleContactSubmit} className=\"space-y-5 max-w-xl mx-auto\" >\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 items-center\">\n              <label className=\"text-sm font-medium text-gray-700\">First Name</label>\n              <div className=\"sm:col-span-2\">\n                <input\n                  type=\"text\"\n                  value={firstName}\n                  onChange={(e) => setFirstName(e.target.value)}\n                  required\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded shadow-sm\"\n                />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 items-center\">\n              <label className=\"text-sm font-medium text-gray-700\">Last Name</label>\n              <div className=\"sm:col-span-2\">\n                <input\n                  type=\"text\"\n                  value={lastName}\n                  onChange={(e) => setLastName(e.target.value)}\n                  required\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded shadow-sm\"\n                />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 items-center\">\n              <label className=\"text-sm font-medium text-gray-700\">Email</label>\n              <div className=\"sm:col-span-2\">\n                <input\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded shadow-sm\"\n                />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 items-center\">\n              <label className=\"text-sm font-medium text-gray-700\">Company</label>\n              <div className=\"sm:col-span-2\">\n                <input\n                  type=\"text\"\n                  value={company}\n                  onChange={(e) => setCompany(e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded shadow-sm\"\n                />\n              </div>\n            </div>\n\n\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 items-center\">\n              <label className=\"text-sm font-medium text-gray-700 flex items-center\">API Key <InfoTooltip text={\"Generate this in Pinpoint.\"} /></label>\n              <div className=\"sm:col-span-2\">\n                <input\n                  type=\"text\"\n                  value={apiKey}\n                  onChange={(e) => setApiKey(e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded shadow-sm\"\n                />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2\">\n              <div className=\"sm:col-start-2 sm:col-span-2 flex justify-end\">\n                <button\n                  type=\"submit\"\n                  className=\"bg-brandGreen text-white px-6 py-3 rounded-full hover:bg-brandGreen-dark transition\"\n                >\n                  Send Message\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      )}\n\n    </section>\n\n  );\n};\n\nexport default PinpointContactPage;\n"],"names":["InfoTooltip","text","className","tabIndex","xmlns","viewBox","fill","d","showToast","setShowToast","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","company","setCompany","apiKey","setApiKey","message","setMessage","stroke","strokeWidth","strokeLinecap","strokeLinejoin","onClick","onSubmit","async","e","preventDefault","fullName","trim","composedMessage","filter","Boolean","join","data","name","fetch","method","headers","body","JSON","stringify","ok","setTimeout","console","error","type","value","onChange","target","required"],"sourceRoot":""}