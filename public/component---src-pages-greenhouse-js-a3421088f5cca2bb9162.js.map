{"version":3,"file":"component---src-pages-greenhouse-js-a3421088f5cca2bb9162.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/greenhouse.js","webpack://gatsby-starter-default/./src/pages/greenhousecontact.js","webpack://gatsby-starter-default/./src/pages/greenhousereferralcontact.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Layout1 from \"../components/Layout1\";\nimport SEO1 from \"../components/SEO1\";\nimport \"aos/dist/aos.css\";\nimport GreenHouseContactPage from \"./greenhousecontact\";\n\nimport GreenhouseReferralContactComponent from \"./greenhousereferralcontact\";\nconst GreenhousePage = () => {\n  const [tilt, setTilt] = useState({ x: 0, y: 0 });\n\n  const handleMouseMove = (e) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = ((e.clientX - rect.left) / rect.width - 0.5) * 10; // -5deg .. 5deg\n    const y = ((e.clientY - rect.top) / rect.height - 0.5) * -10; // -5deg .. 5deg\n    setTilt({ x, y });\n  };\n\n  const handleMouseLeave = () => setTilt({ x: 0, y: 0 });\n\n  return (\n    <Layout1>\n      <SEO1\n        title=\"Greenhouse Integration\"\n        description=\"JobMinglr + Greenhouse Integration\"\n      />\n      <section className=\"container mx-auto py-20 px-6 text-center\">\n        <h1 className=\"text-4xl font-extrabold mb-6 text-brandGreen\" data-aos=\"fade-up\">\n          JobMinglr + Greenhouse Integration\n        </h1>\n        <p className=\"mt-4 text-xl text-gray-700\" data-aos=\"fade-up\">Swipe. Connect. Hired.</p>\n        <br />\n        <div className=\"mx-auto max-w-6xl flex flex-col md:flex-row items-start md:items-center gap-8 md:gap-12\">\n          <div className=\"flex-1 text-left space-y-4 md:pr-6\">\n            <p>\n              JobMinglr makes hiring simple by matching quality candidates with the right roles.\n              With our partnership with Greenhouse, you get a seamless way to manage applications and speed up your hiring process.\n              Best of all, setting up the integration only takes a few minutes — and it’s free.\n            </p>\n\n            <p>You can find JobMinglr in the <a href=\"https://integrations.greenhouse.com/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-brandGreen hover:underline\">Greenhouse Marketplace</a>\n            </p>\n\n            <p>For setup, follow this official <a href=\"https://support.greenhouse.io/hc/en-us/articles/40195031336475-Jobminglr-integration\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-brandGreen hover:underline\">Greenhouse Integration Guide</a>.\n            </p>\n          </div>\n\n          <div className=\"flex-1 w-full md:w-auto md:max-w-none\" style={{ perspective: '1000px' }}>\n            <div\n              className=\"relative rounded-3xl shadow-2xl ring-1 ring-white/10 bg-white/5 backdrop-blur overflow-hidden transition-transform duration-200 will-change-transform\"\n              onMouseMove={handleMouseMove}\n              onMouseLeave={handleMouseLeave}\n              style={{ transform: `rotateX(${tilt.y}deg) rotateY(${tilt.x}deg)` }}\n              role=\"presentation\"\n            >\n              {/* subtle gradient edge */}\n              <div className=\"pointer-events-none absolute inset-0 rounded-3xl ring-1 ring-inset ring-white/20\" />\n\n              <video\n                className=\"block w-full h-full aspect-video object-cover\"\n                controls\n                muted\n                loop\n                playsInline\n                preload=\"metadata\"\n                poster=\"/video-poster.jpg\"\n              >\n                <source\n                  src=\"https://jobminglr-website.s3.us-east-1.amazonaws.com/JobMinglr+%2B+Greenhouse+(1).mp4#t=1\"\n                  type=\"video/mp4\" />\n                Your browser does not support the video tag.\n              </video>\n\n            </div>\n          </div>\n        </div>\n\n        <br />\n        <br />\n        <section className=\"bg-brandGreen/5 py-20\">\n          <div className=\"mx-auto max-w-6xl grid grid-cols-1 md:grid-cols-2 gap-8 md:gap-12 items-stretch\">\n            <div className=\"flex\">\n              <div\n                className=\"relative w-full rounded-3xl shadow-2xl ring-1 ring-white/10 bg-white/5 backdrop-blur p-6 md:p-8 text-left\"\n                data-aos=\"fade-up\"\n                data-aos-delay=\"250\"\n              >\n                <h2 className=\"text-2xl font-bold text-brandGreen\">How to Get Started</h2>\n                <div className=\"mt-6 text-gray-700\">\n                  <GreenHouseContactPage />\n                </div>\n                <div className=\"pointer-events-none absolute inset-0 rounded-3xl ring-1 ring-inset ring-white/20\" />\n              </div>\n            </div>\n\n            <div className=\"flex\">\n              <div className=\"relative w-full rounded-3xl shadow-2xl ring-1 ring-white/10 bg-white/5 backdrop-blur p-6 md:p-8 text-left\">\n                <h2 className=\"text-2xl font-bold text-brandGreen\">Don’t have Greenhouse yet?</h2>\n                <div className=\"mt-4 space-y-4 text-gray-700 leading-relaxed\">\n                  <p>If your team isn’t already using Greenhouse, fill out the form and we’ll connect you with a Greenhouse representative for a personalized demo.</p>\n                  <p>You won’t need to search or sign up elsewhere. We’ll handle the referral and ensure you’re taken care of.</p>\n                </div>\n                <div className=\"mt-6\">\n                  <GreenhouseReferralContactComponent />\n                </div>\n                <div className=\"pointer-events-none absolute inset-0 rounded-3xl ring-1 ring-inset ring-white/20\" />\n              </div>\n            </div>\n          </div>\n        </section>\n        <br />\n        <section className=\"bg-brandGreen/5 py-20\">\n\n          <div className=\"max-w-3xl mx-auto mb-16 text-gray-700 space-y-6\">\n            <h2 className=\"text-2xl font-bold text-brandGreen\">FAQs</h2>\n\n            <div className=\"max-w-xl mx-auto mt-16 text-gray-800\" data-aos=\"fade-up\" data-aos-delay=\"300\">\n              <div className=\"mt-4 space-y-3\">\n                {/* Q1 */}\n                <details className=\"border border-gray-200 rounded-lg p-4\">\n                  <summary className=\"text-base font-medium cursor-pointer flex items-center justify-between\">\n                    <span>1) How do I enable the Greenhouse & JobMinglr integration?</span>\n                    <span className=\"ml-3 text-gray-500\">▾</span>\n                  </summary>\n                  <div className=\"mt-3 text-sm text-gray-700 space-y-2\">\n                    <p>Follow the official Greenhouse instructions here:</p>\n                    <p>👉 <span className=\"font-medium\"><a href=\"https://support.greenhouse.io/hc/en-us/articles/40195031336475-Jobminglr-integration\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-brandGreen hover:underline\">Greenhouse Support — JobMinglr Integration</a></span></p>\n                  </div>\n                </details>\n\n                {/* Q2 */}\n                <details className=\"border border-gray-200 rounded-lg p-4\">\n                  <summary className=\"text-base font-medium cursor-pointer flex items-center justify-between\">\n                    <span>2) Where can I find my Job Board Token?</span>\n                    <span className=\"ml-3 text-gray-500\">▾</span>\n                  </summary>\n                  <div className=\"mt-3 text-sm text-gray-700 space-y-2\">\n                    <p>Your Job Board Token is the last part of your Greenhouse job board URL.</p>\n                    <p>\n                      In <a href=\"https://app9.greenhouse.io/dashboard\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-brandGreen hover:underline\">Greenhouse</a>, go to <strong>Configure ⚙️ → Job Board</strong>. Select the job board you use for external postings.\n                    </p>\n                    <p>Look at the URL for your board:</p>\n                    <pre className=\"bg-gray-50 border border-gray-200 rounded p-2 text-xs overflow-x-auto\">https://boards.greenhouse.io/examplecompany</pre>\n                    <p>\n                      Here, your token is: <code className=\"font-mono\">examplecompany</code>\n                    </p>\n                    <p>\n                      Enter only this token (<code className=\"font-mono\">examplecompany</code>) into the JobMinglr form.\n                    </p>\n                  </div>\n                </details>\n\n                {/* Q3 */}\n                <details className=\"border border-gray-200 rounded-lg p-4\">\n                  <summary className=\"text-base font-medium cursor-pointer flex items-center justify-between\">\n                    <span>3) How do I get my Harvest API Key?</span>\n                    <span className=\"ml-3 text-gray-500\">▾</span>\n                  </summary>\n                  <div className=\"mt-3 text-sm text-gray-700 space-y-2\">\n                    <p>\n                      Harvest API Keys can’t be recovered once created. If you lose yours, you’ll need to generate a new one. Please follow the instructions on the Greenhouse integrations page here:\n                    </p>\n                    <p>👉 <span className=\"font-medium\"><a href=\"https://support.greenhouse.io/hc/en-us/articles/40195031336475-Jobminglr-integration\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-brandGreen hover:underline\">Greenhouse Support — JobMinglr Integration</a></span></p>\n                  </div>\n                </details>\n\n                {/* Q4 */}\n                <details className=\"border border-gray-200 rounded-lg p-4\">\n                  <summary className=\"text-base font-medium cursor-pointer flex items-center justify-between\">\n                    <span>4) How do I find my On-Behalf-Of User ID?</span>\n                    <span className=\"ml-3 text-gray-500\">▾</span>\n                  </summary>\n                  <div className=\"mt-3 text-sm text-gray-700 space-y-2\">\n                    <p>\n                      The On-Behalf-Of User ID is the Greenhouse user ID of the account that created your Harvest API Key.\n                    </p>\n                    <p>\n                      In <a href=\"https://app9.greenhouse.io/dashboard\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-brandGreen hover:underline\">Greenhouse</a>, go to <strong>Configure ⚙️ → Users</strong>. Find and click the user who created your API Key.\n                    </p>\n                    <p>Look at the URL in your browser — it ends with a number.</p>\n                    <pre className=\"bg-gray-50 border border-gray-200 rounded p-2 text-xs overflow-x-auto\">https://app.greenhouse.io/users/12345</pre>\n                    <p>\n                      Here, <code className=\"font-mono\">12345</code> is the On-Behalf-Of User ID. Copy that number and provide it to JobMinglr.\n                    </p>\n                  </div>\n                </details>\n              </div>\n            </div>\n          </div>\n        </section>\n      </section >\n    </Layout1 >\n  );\n};\n\nexport default GreenhousePage;","// src/pages/greenhousecontact.js\nimport React, { useState } from \"react\";\nimport \"aos/dist/aos.css\";\n\nconst InfoTooltip = ({ text }) => (\n  <span className=\"relative group inline-flex items-center align-middle ml-1\" aria-label={text}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" className=\"w-4 h-4 text-gray-400 group-hover:text-gray-700\">\n      <path d=\"M12 2a10 10 0 100 20 10 10 0 000-20zm.75 15.5h-1.5v-6h1.5v6zm0-8h-1.5v-1.5h1.5V9.5z\" />\n    </svg>\n    <span className=\"pointer-events-none absolute left-1/2 -translate-x-1/2 top-full mt-2 z-10 rounded bg-gray-900 text-white text-xs px-3 py-2 opacity-0 group-hover:opacity-100 group-focus:opacity-100 transition shadow-lg whitespace-normal break-words leading-snug min-w-[16rem] w-[28rem] sm:w-[30rem] max-w-[90vw]\">\n      {text}\n    </span>\n  </span>\n);\n\n\nconst GreenHouseContactPage = () => {\n  const [showToast, setShowToast] = useState(false);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [boardToken, setBoardToken] = useState(\"https://boards.greenhouse.io/\");\n  const [boardSlug, setBoardSlug] = useState(\"\");\n  const [harvestApiKey, setHarvestApiKey] = useState(\"\");\n  const [onBehalfOf, setOnBehalfOf] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const handleContactSubmit = async (e) => {\n    e.preventDefault();\n\n    const fullName = `${firstName} ${lastName}`.trim();\n\n    const composedMessage = [\n      company && `Company: ${company}`,\n      boardToken && `Job Board Link: ${boardToken}`,\n      harvestApiKey && `Harvest API Key: ${harvestApiKey}`,\n      onBehalfOf && `On-Behalf-Of User ID: ${onBehalfOf}`,\n      message && `Message: ${message}`,\n    ]\n      .filter(Boolean)\n      .join(\"\\n\");\n\n    const data = {\n      name: fullName,\n      email,\n      message: composedMessage,\n    };\n\n    try {\n      // Call the API using fetch\n      const response = await fetch(\"https://it96ohh4nc.execute-api.us-east-1.amazonaws.com/send-email\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (response.ok) {\n        setShowToast(true);\n        setTimeout(() => setShowToast(false), 5000); // Hide toast after 5 seconds\n        setFirstName(\"\");\n        setLastName(\"\");\n        setEmail(\"\");\n        setCompany(\"\");\n        setBoardToken(\"https://boards.greenhouse.io/\");\n        setBoardSlug(\"\");\n        setHarvestApiKey(\"\");\n        setOnBehalfOf(\"\");\n        setMessage(\"\");\n      } else {\n        console.error(\"Failed to send message\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n    }\n  };\n\n  return (\n\n    <section >\n      <p className=\"text-gray-600 max-w-2xl mb-10\">\n        Once you have set up your JobMinglr integration within Greenhouse, fill out the form below to finish your integration setup.      </p>\n      <p className=\"text-gray-600 max-w-2xl mb-10\">\n        Jobs typically sync within 24 hours once setup is complete.\n      </p>\n\n      {showToast && (\n        <div className=\"mb-6 rounded-md bg-brandGreen border border-brandGreen px-6 py-4 text-sm text-white shadow-md flex items-start justify-between animate-fade-in-out transition-all duration-300 max-w-xl mx-auto\">\n          <div className=\"flex items-start gap-2\">\n            <svg className=\"w-5 h-5 mt-0.5 text-white\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M5 13l4 4L19 7\" />\n            </svg>\n            <span>Thank you! We’ll get back to you within 48 hours.</span>\n          </div>\n          <button onClick={() => setShowToast(false)} className=\"ml-4 text-white hover:text-gray-200\">&times;</button>\n        </div>\n      )}\n\n      {!showToast && (\n        <form onSubmit={handleContactSubmit} className=\"space-y-5 max-w-xl mx-auto\" >\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 items-center\">\n              <label htmlFor=\"firstName\" className=\"text-sm font-medium text-gray-700\">First Name</label>\n              <div className=\"sm:col-span-2\">\n                <input\n                  id=\"firstName\"\n                  type=\"text\"\n                  value={firstName}\n                  onChange={(e) => setFirstName(e.target.value)}\n                  required\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded shadow-sm\"\n                />\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 items-center\">\n              <label htmlFor=\"lastName\" className=\"text-sm font-medium text-gray-700\">Last Name</label>\n              <div className=\"sm:col-span-2\">\n                <input\n                  id=\"lastName\"\n                  type=\"text\"\n                  value={lastName}\n                  onChange={(e) => setLastName(e.target.value)}\n                  required\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded shadow-sm\"\n                />\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 items-center\">\n              <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">Email</label>\n              <div className=\"sm:col-span-2\">\n                <input\n                  id=\"email\"\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded shadow-sm\"\n                />\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 items-center\">\n              <label htmlFor=\"company\" className=\"text-sm font-medium text-gray-700\">Company</label>\n              <div className=\"sm:col-span-2\">\n                <input\n                  id=\"company\"\n                  type=\"text\"\n                  value={company}\n                  onChange={(e) => setCompany(e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded shadow-sm\"\n                />\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 items-center\">\n              <label htmlFor=\"jobBoardLink\" className=\"text-sm font-medium text-gray-700 flex items-center\">\n                Job Board Link <InfoTooltip text={\"Paste the full Greenhouse job board URL (e.g. https://boards.greenhouse.io/examplecompany).\"} />\n              </label>\n              <div className=\"sm:col-span-2\">\n                <div className=\"flex rounded shadow-sm\">\n                  <span className=\"inline-flex items-center px-2 rounded-l border border-r-0 border-gray-300 bg-gray-50 text-gray-600 text-xs\">\n                    https://boards.greenhouse.io/\n                  </span>\n                  <input\n                    id=\"jobBoardLink\"\n                    type=\"text\"\n                    value={boardSlug}\n                    onChange={(e) => {\n                      const raw = e.target.value.trim();\n                      const cleaned = raw\n                        .replace(/^https?:\\/\\/boards\\.greenhouse\\.io\\/?/i, \"\")\n                        .replace(/\\s+/g, \"-\")\n                        .replace(/[^a-zA-Z0-9-]/g, \"\");\n                      setBoardSlug(cleaned);\n                      setBoardToken(`https://boards.greenhouse.io/${cleaned}`);\n                    }}\n                    placeholder=\"company-name\"\n                    className=\"flex-1 min-w-0 w-full px-3 py-2 text-sm border border-gray-300 rounded-r shadow-sm\"\n                  />\n                </div>\n                <p className=\"text-xs text-gray-500 mt-1\">We’ll build the full URL for you.</p>\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 items-center\">\n              <label htmlFor=\"harvestApiKey\" className=\"text-sm font-medium text-gray-700 flex items-center\">\n                Harvest API Key <InfoTooltip text={\"Generate this in Greenhouse: Configure → Dev Center → API Credential Management → Create New API Key.\"} />\n              </label>\n              <div className=\"sm:col-span-2\">\n                <input\n                  id=\"harvestApiKey\"\n                  type=\"text\"\n                  value={harvestApiKey}\n                  onChange={(e) => setHarvestApiKey(e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded shadow-sm\"\n                />\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 items-center\">\n              <label htmlFor=\"onBehalfOf\" className=\"text-sm font-medium text-gray-700 flex items-center\">\n                On-Behalf-Of User ID <InfoTooltip text={\"In Greenhouse: Configure → Users → click the API key owner → copy the number from the URL.\"} />\n              </label>\n              <div className=\"sm:col-span-2\">\n                <input\n                  id=\"onBehalfOf\"\n                  placeholder=\"On-Behalf-Of User ID\"\n                  type=\"text\"\n                  value={onBehalfOf}\n                  onChange={(e) => setOnBehalfOf(e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded shadow-sm\"\n                />\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2\">\n              <div className=\"sm:col-start-2 sm:col-span-2 flex justify-end\">\n                <button\n                  type=\"submit\"\n                  className=\"bg-brandGreen text-white px-6 py-3 rounded-full hover:bg-brandGreen-dark transition\"\n                >\n                  Send Message\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      )}\n\n    </section>\n\n  );\n};\n\nexport default GreenHouseContactPage;\n","// src/pages/contact.js\nimport React, { useState } from \"react\";\nimport \"aos/dist/aos.css\";\n\nconst GreenhouseReferralContactComponent = () => {\n  const [showToast, setShowToast] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const handleContactSubmit = async (e) => {\n    e.preventDefault();\n\n    // Prepare the data to send\n    const data = {\n      name,\n      email,\n      message,\n    };\n\n    try {\n      // Call the API using fetch\n      const response = await fetch(\"https://it96ohh4nc.execute-api.us-east-1.amazonaws.com/send-email\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (response.ok) {\n        setShowToast(true);\n        setTimeout(() => setShowToast(false), 5000); // Hide toast after 5 seconds\n        setName(\"\"); // Reset form fields\n        setEmail(\"\");\n        setMessage(\"\");\n      } else {\n        console.error(\"Failed to send message\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n    }\n  };\n\n  return (\n\n    <div>\n      {showToast && (\n        <div className=\"mb-6 rounded-md bg-brandGreen border border-brandGreen px-6 py-4 text-sm text-white shadow-md flex items-start justify-between animate-fade-in-out transition-all duration-300 max-w-xl mx-auto\">\n          <div className=\"flex items-start gap-2\">\n            <svg className=\"w-5 h-5 mt-0.5 text-white\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M5 13l4 4L19 7\" />\n            </svg>\n            <span>Thank you! We’ll get back to you within 48 hours.</span>\n          </div>\n          <button onClick={() => setShowToast(false)} className=\"ml-4 text-white hover:text-gray-200\">&times;</button>\n        </div>\n      )}\n\n      <form onSubmit={handleContactSubmit} className=\"space-y-5 max-w-xl mx-auto\" data-aos=\"zoom-in\" data-aos-delay=\"400\">\n        <input\n          type=\"text\"\n          placeholder=\"Your Name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required\n          className=\"w-full px-4 py-3 border border-gray-300 rounded shadow-sm\"\n        />\n        <input\n          type=\"email\"\n          placeholder=\"Your Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n          className=\"w-full px-4 py-3 border border-gray-300 rounded shadow-sm\"\n        />\n        <textarea\n          placeholder=\"Your Company Name & Message\"\n          rows=\"5\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          required\n          className=\"w-full px-4 py-3 border border-gray-300 rounded shadow-sm\"\n        />\n        <button\n          type=\"submit\"\n          className=\"bg-brandGreen text-white px-6 py-3 rounded-full hover:bg-brandGreen-dark transition\"\n        >\n          Send Message\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default GreenhouseReferralContactComponent;\n"],"names":["tilt","setTilt","useState","x","y","title","description","className","href","target","rel","style","perspective","onMouseMove","e","rect","currentTarget","getBoundingClientRect","clientX","left","width","clientY","top","height","onMouseLeave","transform","role","controls","muted","loop","playsInline","preload","poster","src","type","InfoTooltip","text","xmlns","viewBox","fill","d","showToast","setShowToast","firstName","setFirstName","lastName","setLastName","email","setEmail","company","setCompany","boardToken","setBoardToken","boardSlug","setBoardSlug","harvestApiKey","setHarvestApiKey","onBehalfOf","setOnBehalfOf","message","setMessage","stroke","strokeWidth","strokeLinecap","strokeLinejoin","onClick","onSubmit","async","preventDefault","fullName","trim","composedMessage","filter","Boolean","join","data","name","fetch","method","headers","body","JSON","stringify","ok","setTimeout","console","error","htmlFor","id","value","onChange","required","cleaned","replace","placeholder","setName","rows"],"sourceRoot":""}